[
  {
    "namespace": "addressBooks",
    "functions": [
      {
        "name": "list",
        "changed": {
          "85": "Read-only address books are now returned as well as read-write books."
        }
      }
    ],
    "types": [
      {
        "id": "AddressBookNode",
        "type": "object",
        "properties": {
          "remote": {
            "added": "91"
          }
        }
      }
    ]
  },
  {
    "namespace": "contacts",
    "functions": [
      {
        "name": "quickSearch",
        "changed": {
          "85": "Read-only address books are now returned as well as read-write books.",
          "91": "Second parameter can be a :ref:`contacts.QueryInfo`. A single string is still supported and used as ``queryInfo.searchString``."
        },
        "parameters": [
          {
            "name": "queryInfo",
            "choices": [
              {
                "type": "string"
              },
              {
                "$ref": "QueryInfo"
              }
            ]
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onUpdated",
        "parameters": [
          {
            "name": "changedProperties",
            "added": 83
          }
        ]
      }
    ],
    "types": [
      {
        "id": "PropertyChange",
        "added": "83"
      },
      {
        "id": "QueryInfo",
        "description": "Object defining a query for :ref:`contacts.quickSearch`.",
        "added": "91",
        "type": "object",
        "properties": {
          "searchString": {
            "type": "string",
            "optional": true,
            "description": "One or more space-separated terms to search for."
          },
          "includeLocal": {
            "type": "boolean",
            "optional": true,
            "default": true,
            "description": "Whether to include results from local address books. Defaults to true."
          },
          "includeRemote": {
            "type": "boolean",
            "optional": true,
            "default": true,
            "description": "Whether to include results from remote address books. Defaults to true."
          },
          "includeReadOnly": {
            "type": "boolean",
            "optional": true,
            "default": true,
            "description": "Whether to include results from read-only address books. Defaults to true."
          },
          "includeReadWrite": {
            "type": "boolean",
            "optional": true,
            "default": true,
            "description": "Whether to include results from read-write address books. Defaults to true."
          }
        }
      },
      {
        "id": "ContactProperties",
        "type": "object",
        "description": "A set of individual properties for a particular contact, and its vCard string. Further information can be found in :ref:`howto_contacts`.",
        "properties": {
          "vCard": {
            "added": "102",
            "type": "string",
            "description": "The contacts vCard string."
          },
          "<legacy properties>": {
            "deprecated": true,
            "type": "string",
            "description": "`Legacy properties <https://searchfox.org/comm-central/rev/8a1ae67088acf237dab2fd704db18589e7bf119e/mailnews/addrbook/modules/VCardUtils.jsm#295-334>`__ point to certain fields in the contacts vCard string and provide direct read/write access."
          },
          "<custom properties>": {
            "type": "string",
            "description": "Custom properties are not saved in the users vCard. Therfore, they are not transfered to the users server, if the contact is stored on a remote CardDAV server. Names of custom properties may include ``a-z``, ``A-Z``, ``1-9`` and ``_``."
          }
        }
      }      
    ]
  },
  {
    "namespace": "mailingLists",
    "types": [
      {
        "id": "MailingListNode",
        "type": "object",
        "properties": {
          "remote": {
            "added": "91"
          }
        }
      }
    ]
  },
  {
    "namespace": "addressBooks.provider",
    "events": [
      {
        "name": "onSearchRequest",
        "parameters": [
          {
            "name": "node",
            "$ref": "addressBooks.AddressBookNode"
          }
        ],
        "returns": {
          "type": "object",
          "properties": {
            "results": {
              "type": "array",
              "items": {
                "$ref": "contacts.ContactProperties"
              }
            },
            "isCompleteResult": {
              "type": "boolean"
            }
          }
        }
      }
    ]
  }
]
